services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - airflow-net

  airflow:
    image: apache/airflow:3.0.6
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'True'
      AIRFLOW__WEBSERVER__CREATE_ADMIN_USER: 'False'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - /Users/dravindel/Documents/Dev/Portfolio/walmart-etl-pipeline/data:/opt/airflow/data
      - ./airflow/plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow db migrate && airflow standalone"
    networks:
      - airflow-net

networks:
  airflow-net:

volumes:
  postgres-db-volume: