services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    networks:
      - airflow-net

  airflow:
    build: .
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      AIRFLOW__WEBSERVER__CREATE_ADMIN_USER: ${AIRFLOW__WEBSERVER__CREATE_ADMIN_USER}
      AIRFLOW__WEBSERVER__ADMIN_USER: ${AIRFLOW__WEBSERVER__ADMIN_USER}
      AIRFLOW__WEBSERVER__ADMIN_PASSWORD: ${AIRFLOW__WEBSERVER__ADMIN_PASSWORD}
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      AIRFLOW_CONN_POSTGRES_WALMART: ${AIRFLOW_CONN_POSTGRES_WALMART}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false' 
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'True'
      PYTHONPATH: /opt/airflow:/opt/airflow/dags:/opt/airflow/etl
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/etl:/opt/airflow/etl
      - ./airflow/sql:/opt/airflow/sql     
      - ./airflow/data:/opt/airflow/data
      - ./airflow/requirements-airflow.txt:/requirements.txt

    ports:
      - "8080:8080"
    command: >
      bash -c "
        echo 'Checking Postgres connection...';
        until pg_isready -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do
          echo 'Waiting for Postgres...';
          sleep 5;
        done;
        echo 'Postgres is ready, migrating database...';
        airflow db migrate &&
        airflow standalone
      "
    networks:
      - airflow-net

  grafana:
    image: grafana/grafana:10.4.2
    container_name: walmart-grafana
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - airflow-net

networks:
  airflow-net:

volumes:
  postgres-db-volume:
  grafana-storage: